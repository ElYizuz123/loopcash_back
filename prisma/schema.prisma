// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Movement {
  idGanancia   Int        @id @default(autoincrement())
  type         String
  quantity     Float
  isGoal       Boolean    @default(false)
  idRepeatable Int
  idLoseType   Int?
  idProfile    Int
  Repeatable   Repeatable @relation(fields: [idRepeatable], references: [idRepeatable], onDelete: Cascade, onUpdate: NoAction, map: "fk_movement_movement")
  LoseType     LoseType?   @relation(fields: [idLoseType], references: [idLoseType], onDelete: Cascade, onUpdate: NoAction, map: "fk_movement_losetype")
  Profile      Profile    @relation(fields: [idProfile], references: [idProfile], onDelete: Cascade, onUpdate: NoAction, map: "fk_movement_profile")
}

model Profile {
  idProfile Int        @id @default(autoincrement())
  user      String     @unique
  name      String
  password  String
  total     Float      @default(0.0)
  idAvatar  Int        @default(0)
  Movement  Movement[]
}

model Repeatable {
  idRepeatable Int        @id @default(autoincrement())
  type         String
  everyDate    DateTime   @db.Date @default(now())
  Movement     Movement[]
}

model LoseType {
  idLoseType Int        @id @default(autoincrement())
  name       String
  Movement   Movement[]
}
